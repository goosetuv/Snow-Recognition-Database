//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SRD.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SRD.Properties.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT A.ApplicationID, A.Name AS [Application], 
        ///       M.Name AS [Manufacturer], 
        ///       L.Name AS [Language], 
        ///       A.OSType, 
        ///       A.ApplicationType, 
        ///       A.OverridesApplicationID, 
        ///       A.IsOS, 
        ///       A.IsGroup, 
        ///       A.IsBundle, 
        ///       A.IsHidden, 
        ///       A.NoLicenseRequired, 
        ///       A.GloballyGeneratedApplication, 
        ///       AF.Name AS [Family Name], 
        ///       A.EditionIndex, 
        ///       A.VersionIndex, 
        ///       A.CompatibleWithID, 
        ///       A.NoMetering, 
        ///	   A.SRSUpdateDate, 
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetApplicationListAll {
            get {
                return ResourceManager.GetString("GetApplicationListAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 0 A.ApplicationID, A.Name AS [Application], 
        ///       M.Name AS [Manufacturer], 
        ///       L.Name AS [Language], 
        ///       A.OSType, 
        ///       A.ApplicationType, 
        ///       A.OverridesApplicationID, 
        ///       A.IsOS, 
        ///       A.IsGroup, 
        ///       A.IsBundle, 
        ///       A.IsHidden, 
        ///       A.NoLicenseRequired, 
        ///       A.GloballyGeneratedApplication, 
        ///       AF.Name AS [Family Name], 
        ///       A.EditionIndex, 
        ///       A.VersionIndex, 
        ///       A.CompatibleWithID, 
        ///       A.NoMetering, 
        ///	   A.SRSUpdateDate, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetApplicationListEmpty {
            get {
                return ResourceManager.GetString("GetApplicationListEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 100 A.ApplicationID, A.Name AS [Application], 
        ///       M.Name AS [Manufacturer], 
        ///       L.Name AS [Language], 
        ///       A.OSType, 
        ///       A.ApplicationType, 
        ///       A.OverridesApplicationID, 
        ///       A.IsOS, 
        ///       A.IsGroup, 
        ///       A.IsBundle, 
        ///       A.IsHidden, 
        ///       A.NoLicenseRequired, 
        ///       A.GloballyGeneratedApplication, 
        ///       AF.Name AS [Family Name], 
        ///       A.EditionIndex, 
        ///       A.VersionIndex, 
        ///       A.CompatibleWithID, 
        ///       A.NoMetering, 
        ///	   A.SRSUpdateDat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetApplicationListTop100 {
            get {
                return ResourceManager.GetString("GetApplicationListTop100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE	@return_value VARCHAR
        ///EXEC    @return_value = [SnowLicenseManager].[dbo].[ApplicationRuleList]
        ///        @ApplicationID = @AppID.
        /// </summary>
        internal static string GetApplicationRules {
            get {
                return ResourceManager.GetString("GetApplicationRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT A.ApplicationID, A.Name AS [Application], 
        ///       M.Name AS [Manufacturer], 
        ///       L.Name AS [Language], 
        ///       A.OSType, 
        ///       A.ApplicationType, 
        ///       A.OverridesApplicationID, 
        ///       A.IsOS, 
        ///       A.IsGroup, 
        ///       A.IsBundle, 
        ///       A.IsHidden, 
        ///       A.NoLicenseRequired, 
        ///       A.GloballyGeneratedApplication, 
        ///       AF.Name AS [Family Name], 
        ///       A.EditionIndex, 
        ///       A.VersionIndex, 
        ///       A.CompatibleWithID, 
        ///       A.NoMetering, 
        ///	   A.SRSUpdateDate, 
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetApplicationSearch {
            get {
                return ResourceManager.GetString("GetApplicationSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Name FROM SnowLicenseManager.dbo.tblCID.
        /// </summary>
        internal static string GetCustomers {
            get {
                return ResourceManager.GetString("GetCustomers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT U.CID, 
        ///       S.*
        ///FROM SnowLicenseManager.dbo.tblSoftwareCIDUnassigned U
        ///     JOIN SnowLicenseManager.dbo.tblSoftware S ON S.SoftwareCheckSum = U.SoftwareCheckSum
        ///WHERE U.CID = @CID;.
        /// </summary>
        internal static string GetUnassignedApplicationListAll {
            get {
                return ResourceManager.GetString("GetUnassignedApplicationListAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT AC.ComputerName,
        ///               FS.AppName, 
        ///			   FS.AppVersion, 
        ///			   FS.AppManufacturer, 
        ///			   FS.AppIsOs, 
        ///			   FS.SwName, 
        ///			   FS.SwManufacturer,
        ///			   FS.SwVersion, 
        ///			   FS.SwPathName, 
        ///			   FS.SwFileName, 
        ///			   FS.SwFileSize,
        ///			   FS.SwInstallDate, 
        ///			   FS.SwIsLocal, 
        ///			   FS.SwIsMSI, 
        ///			   FS.SwLicenseNumber, 
        ///			   FS.SwLastScanned
        ///FROM SnowInventory.inv.vFilterSoftware FS LEFT JOIN SnowInventory.inv.vAllComputers AC ON AC.ComputerID = FS.ComputerID 
        ///WHERE {Col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetUnassignedApplicationListComp {
            get {
                return ResourceManager.GetString("GetUnassignedApplicationListComp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP 0 U.CID, 
        ///       S.*
        ///FROM SnowLicenseManager.dbo.tblSoftwareCIDUnassigned U
        ///     JOIN SnowLicenseManager.dbo.tblSoftware S ON S.SoftwareCheckSum = U.SoftwareCheckSum;.
        /// </summary>
        internal static string GetUnassignedApplicationListEmpty {
            get {
                return ResourceManager.GetString("GetUnassignedApplicationListEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT U.CID, 
        ///       S.*
        ///FROM SnowLicenseManager.dbo.tblSoftwareCIDUnassigned U
        ///     JOIN SnowLicenseManager.dbo.tblSoftware S ON S.SoftwareCheckSum = U.SoftwareCheckSum
        ///WHERE {ColumnName} {Operator} @SearchTerm.
        /// </summary>
        internal static string GetUnassignedApplicationListSearch {
            get {
                return ResourceManager.GetString("GetUnassignedApplicationListSearch", resourceCulture);
            }
        }
    }
}
